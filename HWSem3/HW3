CREATE DATABASE sem3HW;
USE sem3HW;

CREATE TABLE sapespeople
(
snum INT primary key not null,
sname VARCHAR(45) not null,
city VARCHAR(45) not null,
comm VARCHAR(5) not null
);
INSERT INTO sapespeople(snum, sname, city,comm) VALUE
(1001,'Peel', 'London', '.12'),
(1002,'Serres', 'San Jose', '.13'),
(1004,'Motika', 'London', '.11'),
(1007,'Rifkin', 'Barcelona', '.15'),
(1003,'Axelrod', 'New York', '.10');

CREATE TABLE customers
(
cnum INT primary key not null,
cname VARCHAR(45) not null,
city VARCHAR(45) not null,
rating INT not null,
snum INT not null,
foreign key (snum) references sapespeople (snum)
);

INSERT INTO customers(cnum, cname,city,rating, snum)value
(2001,'Hoffman', 'London', 100, 1001),
(2002,'Giovanni', 'Rome', 200, 1003),
(2003,'Liu', 'SanJose', 200, 1002),
(2004,'Grass', 'Berlin', 300, 1002),
(2006,'Clemens', 'London', 100, 1001),
(2008,'Cisneros', 'SanJose', 300, 1007),
(2007,'Pereira', 'Rome', 100, 1004);

CREATE TABLE orders
(
onum INT not null,
amt double not null,
odate date,
cnum int,
snum int,
foreign key(cnum) references customers(cnum),
foreign key(snum) references sapespeople(snum)
);

INSERT INTO orders(onum, amt, odate, cnum, snum) VALUES
(3001, 18.69, '1990-03-10', 2008, 1007),
(3003, 767.19, '1990/03/10', 2001, 1001),
(3002, 1900.10, '1990/03/10', 2007, 1004),
(3005, 5160.45,'1990/03/10', 2003, 1002),
(3006, 1098.16, '1990/03/10', 2008, 1007),
(3009, 1713.23, '1990/04/10', 2002, 1003),
(3007, 75.75, '1990/04/10', 2004, 1002),
(3008, 4723.00,'1990/05/10', 2006, 1001),
(3010, 1309.95, '1990/06/10', 2004, 1002),
(3011, 9891.88, '1990/06/10', 2006, 1001);

select * from orders;
-- 1.	 Напишите запрос, который вывел бы таблицу со столбцами в следующем порядке: 
-- city, sname, snum, comm. (к первой или второй таблице, используя SELECT)
SELECT city,sname,snum,comm from sapespeople;

-- 2.	 Напишите команду SELECT, которая вывела бы оценку(rating),
-- сопровождаемую именем каждого заказчика в городе San Jose. (“заказчики”)
SELECT rating, cname from customers
WHERE customers.city = "SanJose";

-- 3.	 Напишите запрос, который вывел бы значения snum всех продавцов из 
-- таблицы заказов без каких бы то ни было повторений. (уникальные значения в  “snum“ “Продавцы”)
SELECT DISTINCT snum FROM customers;

-- 4*. 	Напишите запрос, который бы выбирал заказчиков, чьи имена начинаются с буквы G. 
-- Используется оператор "LIKE": (“заказчики”)
SELECT cname FROM customers
WHERE cname LIKE 'G%';

-- 5. 	Напишите запрос, 
-- который может дать вам все заказы со значениями суммы выше чем $1,000. (“Заказы”, “amt”  - сумма)
SELECT amt FROM orders
WHERE amt > 1000;

-- 6.	Напишите запрос который выбрал бы наименьшую сумму заказа.
-- (Из поля “amt” - сумма в таблице “Заказы” выбрать наименьшее значение)
SELECT min(amt) FROM orders;

-- 7. 	Напишите запрос к таблице “Заказчики”, который может показать всех заказчиков, 
-- у которых рейтинг больше 100 и они находятся не в Риме.
SELECT cname FROM customers
WHERE rating > 100 AND city != 'Rome';


CREATE TABLE worker
(
id int primary key auto_increment not null,
wname varchar(15) not null,
wsurname varchar(15) not null,
speciality varchar(15) not null,
seniority int not null,
salary int not null,
age int not null
);

INSERT INTO worker (wname, wsurname, speciality, seniority, salary, age) VALUES
('Вася','Васькин','начальник', 40, 100000, 60),
('Петя','Петькин','начальник', 8, 70000, 30),
('Катя','Каткина','инженер', 2, 70000, 25),
('Саша','Сашкин','инженер', 12, 50000, 35),
('Иван','Иванов','рабочий', 40, 30000, 59),
('Петр','Петров','рабочий', 20, 25000, 40),
('Сидор','Сидоров','рабочий', 10, 20000, 35),
('Антон','Фнтонов','рабочий', 8, 19000, 28),
('Юра','Юркин','рабочий', 5, 15000, 25),
('Максим','Воронин','рабочий', 2, 11000, 22),
('Юра','Галкин','рабочий', 3, 12000, 24),
('Люся','Люськина','уборщица', 10, 10000, 49);

select * from worker;

-- Отсортируйте поле “зарплата” в порядке убывания и возрастания
SELECT salary FROM worker
ORDER BY salary;

SELECT salary FROM worker
ORDER BY salary DESC;

-- ** Отсортируйте по возрастанию поле “Зарплата” и выведите 5 строк с 
-- наибольшей заработной платой (возможен подзапрос)
SELECT * FROM worker
ORDER BY salary
limit 5;


-- Выполните группировку всех сотрудников по специальности , 
-- суммарная зарплата которых превышает 100000
SELECT speciality, COUNT(*) as summ, sum(salary) as summ1 FROM worker
WHERE salary > 10000
GROUP BY speciality;